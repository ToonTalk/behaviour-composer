to update-all-turtle-states
 if camera-tracks-centroid
  [let visible-objects all-individuals
   if any? visible-objects
     [set mean-x mean [ my-x ] of visible-objects
      set mean-y mean [ my-y ] of visible-objects]]
 ; used to only do the following with objects-with-something-to-do but 
 ; state may have been set by a different agent
 let ignore objects with [update-turtle-state]
end

to-report update-turtle-state
 if-else ( xcor = previous-xcor ) and ( ycor = previous-ycor )
 [set previous-xcor my-x 
  set previous-ycor my-y 
  if camera-tracks-centroid
     [set previous-xcor previous-xcor - mean-x
      set previous-ycor previous-ycor - mean-y]
  ; check if there is patch where I'm going (delta from where I am)
  if-else patch-at ( previous-xcor - xcor ) ( previous-ycor - ycor ) = nobody
    [set hidden? true]
    [setxy previous-xcor previous-ycor 
     ; reset previous-xcor since there may be a very tiny round-off error
     set previous-xcor xcor 
     set previous-ycor ycor] ]
 [set my-x xcor 
  set my-y ycor 
  set my-next-x xcor 
  set my-next-y ycor 
  set previous-xcor my-x 
  set previous-ycor my-y ]
  report false
end

to initialise-previous-state
 set previous-xcor xcor 
 set previous-ycor ycor 
end
